<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-16T16:52:17 IST" name="Suite" finished-at="2025-04-16T16:55:40 IST" duration-ms="203160">
    <groups>
    </groups>
    <test started-at="2025-04-16T16:52:17 IST" name="Test" finished-at="2025-04-16T16:55:40 IST" duration-ms="203160">
      <class name="tests.Login">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:18 IST" name="setUp" finished-at="2025-04-16T16:53:26 IST" duration-ms="7422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.util.HashMap)[pri:1, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:26 IST" name="verifyLoginWithValidCredentials" data-provider="testdatasupplier" finished-at="2025-04-16T16:53:27 IST" duration-ms="1359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=amotooribatch5fone1@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:27 IST" name="tearDown" finished-at="2025-04-16T16:53:28 IST" duration-ms="990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:28 IST" name="setUp" finished-at="2025-04-16T16:53:37 IST" duration-ms="8685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.util.HashMap)[pri:1, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:37 IST" name="verifyLoginWithValidCredentials" data-provider="testdatasupplier" finished-at="2025-04-16T16:53:38 IST" duration-ms="1398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=amotooribatch5fone2@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:38 IST" name="tearDown" finished-at="2025-04-16T16:53:39 IST" duration-ms="931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:39 IST" name="setUp" finished-at="2025-04-16T16:53:49 IST" duration-ms="9911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.util.HashMap)[pri:1, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:49 IST" name="verifyLoginWithValidCredentials" data-provider="testdatasupplier" finished-at="2025-04-16T16:53:50 IST" duration-ms="1303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=amotooribatch5fone3@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:50 IST" name="tearDown" finished-at="2025-04-16T16:53:51 IST" duration-ms="886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:53:51 IST" name="setUp" finished-at="2025-04-16T16:54:01 IST" duration-ms="9848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.util.HashMap)[pri:1, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:01 IST" name="verifyLoginWithValidCredentials" data-provider="testdatasupplier" finished-at="2025-04-16T16:54:03 IST" duration-ms="1466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=amotooribatch5fone4@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:03 IST" name="tearDown" finished-at="2025-04-16T16:54:03 IST" duration-ms="974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:03 IST" name="setUp" finished-at="2025-04-16T16:54:14 IST" duration-ms="10121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.util.HashMap)[pri:1, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:14 IST" name="verifyLoginWithValidCredentials" data-provider="testdatasupplier" finished-at="2025-04-16T16:54:15 IST" duration-ms="1429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=amotooribatch5fone5@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:15 IST" name="tearDown" finished-at="2025-04-16T16:54:16 IST" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:16 IST" name="setUp" finished-at="2025-04-16T16:54:25 IST" duration-ms="9177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidEmailAndPassword()[pri:2, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:25 IST" name="verifyLoginWithInvalidEmailAndPassword" finished-at="2025-04-16T16:54:26 IST" duration-ms="1290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:26 IST" name="tearDown" finished-at="2025-04-16T16:54:27 IST" duration-ms="990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:27 IST" name="setUp" finished-at="2025-04-16T16:54:37 IST" duration-ms="10041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword()[pri:3, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:37 IST" name="verifyLoginWithInvalidEmailAndValidPassword" finished-at="2025-04-16T16:54:39 IST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:39 IST" name="tearDown" finished-at="2025-04-16T16:54:40 IST" duration-ms="913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:40 IST" name="setUp" finished-at="2025-04-16T16:54:50 IST" duration-ms="10337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidEmailAndINValidPassword()[pri:4, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:50 IST" name="verifyLoginWithValidEmailAndINValidPassword" finished-at="2025-04-16T16:54:51 IST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndINValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:51 IST" name="tearDown" finished-at="2025-04-16T16:54:52 IST" duration-ms="934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:54:52 IST" name="setUp" finished-at="2025-04-16T16:55:02 IST" duration-ms="10287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithoutCredentials()[pri:5, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:55:02 IST" name="verifyLoginWithoutCredentials" finished-at="2025-04-16T16:55:05 IST" duration-ms="2676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithoutCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@1750fbeb]" started-at="2025-04-16T16:55:05 IST" name="tearDown" finished-at="2025-04-16T16:55:06 IST" duration-ms="949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Login -->
      <class name="tests.Search">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:06 IST" name="setUp" finished-at="2025-04-16T16:55:17 IST" duration-ms="11079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchWithExistingProductName()[pri:1, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:17 IST" name="verifySearchWithExistingProductName" finished-at="2025-04-16T16:55:18 IST" duration-ms="830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithExistingProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:18 IST" name="tearDown" finished-at="2025-04-16T16:55:19 IST" duration-ms="1022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:19 IST" name="setUp" finished-at="2025-04-16T16:55:28 IST" duration-ms="8712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchWithNonExistingProductName()[pri:2, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:28 IST" name="verifySearchWithNonExistingProductName" finished-at="2025-04-16T16:55:28 IST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithNonExistingProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:28 IST" name="tearDown" finished-at="2025-04-16T16:55:29 IST" duration-ms="1050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:29 IST" name="setUp" finished-at="2025-04-16T16:55:39 IST" duration-ms="9276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchWithoutProductName()[pri:3, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:39 IST" name="verifySearchWithoutProductName" finished-at="2025-04-16T16:55:39 IST" duration-ms="624" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [There is no product that matches the search criteria.] but found [There is no product that matches the search criteria.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [There is no product that matches the search criteria.] but found [There is no product that matches the search criteria.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1594)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2217)
at org.testng.Assert.assertNotEquals(Assert.java:2239)
at tests.Search.verifySearchWithoutProductName(Search.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithoutProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Search@5b247367]" started-at="2025-04-16T16:55:39 IST" name="tearDown" finished-at="2025-04-16T16:55:40 IST" duration-ms="931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Search -->
      <class name="tests.Register">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:18 IST" name="setUp" finished-at="2025-04-16T16:52:29 IST" duration-ms="11151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringUsingMandatoryfields()[pri:1, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:29 IST" name="verifyRegisteringUsingMandatoryfields" finished-at="2025-04-16T16:52:32 IST" duration-ms="2875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringUsingMandatoryfields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:32 IST" name="tearDown" finished-at="2025-04-16T16:52:33 IST" duration-ms="926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:33 IST" name="setUp" finished-at="2025-04-16T16:52:45 IST" duration-ms="11966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringUsingAllfields()[pri:2, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:45 IST" name="verifyRegisteringUsingAllfields" finished-at="2025-04-16T16:52:47 IST" duration-ms="2830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringUsingAllfields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:47 IST" name="tearDown" finished-at="2025-04-16T16:52:48 IST" duration-ms="994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:48 IST" name="setUp" finished-at="2025-04-16T16:52:58 IST" duration-ms="9187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountSelectingByYesNewsLettersOptions()[pri:3, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:52:58 IST" name="verifyRegisteringAccountSelectingByYesNewsLettersOptions" finished-at="2025-04-16T16:53:02 IST" duration-ms="4018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountSelectingByYesNewsLettersOptions -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:53:02 IST" name="tearDown" finished-at="2025-04-16T16:53:03 IST" duration-ms="917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:53:03 IST" name="setUp" finished-at="2025-04-16T16:53:13 IST" duration-ms="10159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountSelectingByNoNewsLettersOptions()[pri:4, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:53:13 IST" name="verifyRegisteringAccountSelectingByNoNewsLettersOptions" finished-at="2025-04-16T16:53:16 IST" duration-ms="3768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountSelectingByNoNewsLettersOptions -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@663c9e7a]" started-at="2025-04-16T16:53:16 IST" name="tearDown" finished-at="2025-04-16T16:53:18 IST" duration-ms="1118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Register -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
